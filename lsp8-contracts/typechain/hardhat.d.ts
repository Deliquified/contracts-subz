/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { ethers } from "ethers";
import {
  DeployContractOptions,
  FactoryOptions,
  HardhatEthersHelpers as HardhatEthersHelpersBase,
} from "@nomicfoundation/hardhat-ethers/types";

import * as Contracts from ".";

declare module "hardhat/types/runtime" {
  interface HardhatEthersHelpers extends HardhatEthersHelpersBase {
    getContractFactory(
      name: "ERC725Y",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC725Y__factory>;
    getContractFactory(
      name: "ERC725YInitAbstract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC725YInitAbstract__factory>;
    getContractFactory(
      name: "IERC725Y",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC725Y__factory>;
    getContractFactory(
      name: "IERC725Y",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC725Y__factory>;
    getContractFactory(
      name: "ILSP1UniversalReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILSP1UniversalReceiver__factory>;
    getContractFactory(
      name: "LSP17Extendable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP17Extendable__factory>;
    getContractFactory(
      name: "LSP17ExtendableInitAbstract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP17ExtendableInitAbstract__factory>;
    getContractFactory(
      name: "LSP4DigitalAssetMetadata",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP4DigitalAssetMetadata__factory>;
    getContractFactory(
      name: "LSP4DigitalAssetMetadataInitAbstract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP4DigitalAssetMetadataInitAbstract__factory>;
    getContractFactory(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.OwnableUpgradeable__factory>;
    getContractFactory(
      name: "IVotesUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVotesUpgradeable__factory>;
    getContractFactory(
      name: "VotesUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.VotesUpgradeable__factory>;
    getContractFactory(
      name: "IERC5267Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC5267Upgradeable__factory>;
    getContractFactory(
      name: "IERC5805Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC5805Upgradeable__factory>;
    getContractFactory(
      name: "IERC6372Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC6372Upgradeable__factory>;
    getContractFactory(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Initializable__factory>;
    getContractFactory(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ContextUpgradeable__factory>;
    getContractFactory(
      name: "EIP712Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712Upgradeable__factory>;
    getContractFactory(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165Upgradeable__factory>;
    getContractFactory(
      name: "IERC165Upgradeable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165Upgradeable__factory>;
    getContractFactory(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Ownable__factory>;
    getContractFactory(
      name: "GovernorCountingSimple",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorCountingSimple__factory>;
    getContractFactory(
      name: "GovernorSettings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorSettings__factory>;
    getContractFactory(
      name: "GovernorVotes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorVotes__factory>;
    getContractFactory(
      name: "GovernorVotesQuorumFraction",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.GovernorVotesQuorumFraction__factory>;
    getContractFactory(
      name: "Governor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Governor__factory>;
    getContractFactory(
      name: "IGovernor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IGovernor__factory>;
    getContractFactory(
      name: "IVotes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IVotes__factory>;
    getContractFactory(
      name: "Votes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Votes__factory>;
    getContractFactory(
      name: "IERC1271",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1271__factory>;
    getContractFactory(
      name: "IERC5267",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC5267__factory>;
    getContractFactory(
      name: "IERC5805",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC5805__factory>;
    getContractFactory(
      name: "IERC6372",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC6372__factory>;
    getContractFactory(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC1155Receiver__factory>;
    getContractFactory(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC721Receiver__factory>;
    getContractFactory(
      name: "EIP712",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.EIP712__factory>;
    getContractFactory(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ERC165__factory>;
    getContractFactory(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.IERC165__factory>;
    getContractFactory(
      name: "ShortStrings",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ShortStrings__factory>;
    getContractFactory(
      name: "DoubleEndedQueue",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.DoubleEndedQueue__factory>;
    getContractFactory(
      name: "LSP8Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP8Burnable__factory>;
    getContractFactory(
      name: "LSP8BurnableInitAbstract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP8BurnableInitAbstract__factory>;
    getContractFactory(
      name: "LSP8CappedSupply",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP8CappedSupply__factory>;
    getContractFactory(
      name: "LSP8CappedSupplyInitAbstract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP8CappedSupplyInitAbstract__factory>;
    getContractFactory(
      name: "LSP8Enumerable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP8Enumerable__factory>;
    getContractFactory(
      name: "LSP8EnumerableInitAbstract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP8EnumerableInitAbstract__factory>;
    getContractFactory(
      name: "LSP8Votes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP8Votes__factory>;
    getContractFactory(
      name: "LSP8VotesInitAbstract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP8VotesInitAbstract__factory>;
    getContractFactory(
      name: "ILSP8IdentifiableDigitalAsset",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILSP8IdentifiableDigitalAsset__factory>;
    getContractFactory(
      name: "LSP7Burnable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP7Burnable__factory>;
    getContractFactory(
      name: "LSP7BurnableInitAbstract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP7BurnableInitAbstract__factory>;
    getContractFactory(
      name: "LSP7CappedSupply",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP7CappedSupply__factory>;
    getContractFactory(
      name: "LSP7CappedSupplyInitAbstract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP7CappedSupplyInitAbstract__factory>;
    getContractFactory(
      name: "LSP7Votes",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP7Votes__factory>;
    getContractFactory(
      name: "LSP7VotesInitAbstract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP7VotesInitAbstract__factory>;
    getContractFactory(
      name: "ILSP7DigitalAsset",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILSP7DigitalAsset__factory>;
    getContractFactory(
      name: "LSP7DigitalAsset",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP7DigitalAsset__factory>;
    getContractFactory(
      name: "LSP7DigitalAssetInitAbstract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP7DigitalAssetInitAbstract__factory>;
    getContractFactory(
      name: "MyGovernor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MyGovernor__factory>;
    getContractFactory(
      name: "MyVotingToken",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MyVotingToken__factory>;
    getContractFactory(
      name: "MockUniversalReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockUniversalReceiver__factory>;
    getContractFactory(
      name: "ILSP7Mintable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILSP7Mintable__factory>;
    getContractFactory(
      name: "LSP7Mintable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP7Mintable__factory>;
    getContractFactory(
      name: "LSP7MintableInit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP7MintableInit__factory>;
    getContractFactory(
      name: "LSP7MintableInitAbstract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP7MintableInitAbstract__factory>;
    getContractFactory(
      name: "LSP8IdentifiableDigitalAsset",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP8IdentifiableDigitalAsset__factory>;
    getContractFactory(
      name: "LSP8IdentifiableDigitalAssetInitAbstract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP8IdentifiableDigitalAssetInitAbstract__factory>;
    getContractFactory(
      name: "MyGovernor",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MyGovernor__factory>;
    getContractFactory(
      name: "MyVotingNFT",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MyVotingNFT__factory>;
    getContractFactory(
      name: "MockUniversalReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.MockUniversalReceiver__factory>;
    getContractFactory(
      name: "ILSP1UniversalReceiver",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILSP1UniversalReceiver__factory>;
    getContractFactory(
      name: "ILSP6KeyManager",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILSP6KeyManager__factory>;
    getContractFactory(
      name: "ILSP7DigitalAsset",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILSP7DigitalAsset__factory>;
    getContractFactory(
      name: "ILSP8Mintable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.ILSP8Mintable__factory>;
    getContractFactory(
      name: "LSP8Mintable",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP8Mintable__factory>;
    getContractFactory(
      name: "SubscriptionFactory",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.SubscriptionFactory__factory>;
    getContractFactory(
      name: "LSP8MintableInit",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP8MintableInit__factory>;
    getContractFactory(
      name: "LSP8MintableInitAbstract",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.LSP8MintableInitAbstract__factory>;
    getContractFactory(
      name: "Subscription",
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<Contracts.Subscription__factory>;

    getContractAt(
      name: "ERC725Y",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC725Y>;
    getContractAt(
      name: "ERC725YInitAbstract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC725YInitAbstract>;
    getContractAt(
      name: "IERC725Y",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC725Y>;
    getContractAt(
      name: "IERC725Y",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC725Y>;
    getContractAt(
      name: "ILSP1UniversalReceiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ILSP1UniversalReceiver>;
    getContractAt(
      name: "LSP17Extendable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP17Extendable>;
    getContractAt(
      name: "LSP17ExtendableInitAbstract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP17ExtendableInitAbstract>;
    getContractAt(
      name: "LSP4DigitalAssetMetadata",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP4DigitalAssetMetadata>;
    getContractAt(
      name: "LSP4DigitalAssetMetadataInitAbstract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP4DigitalAssetMetadataInitAbstract>;
    getContractAt(
      name: "OwnableUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.OwnableUpgradeable>;
    getContractAt(
      name: "IVotesUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IVotesUpgradeable>;
    getContractAt(
      name: "VotesUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.VotesUpgradeable>;
    getContractAt(
      name: "IERC5267Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC5267Upgradeable>;
    getContractAt(
      name: "IERC5805Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC5805Upgradeable>;
    getContractAt(
      name: "IERC6372Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC6372Upgradeable>;
    getContractAt(
      name: "Initializable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Initializable>;
    getContractAt(
      name: "ContextUpgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ContextUpgradeable>;
    getContractAt(
      name: "EIP712Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712Upgradeable>;
    getContractAt(
      name: "ERC165Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165Upgradeable>;
    getContractAt(
      name: "IERC165Upgradeable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165Upgradeable>;
    getContractAt(
      name: "Ownable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Ownable>;
    getContractAt(
      name: "GovernorCountingSimple",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorCountingSimple>;
    getContractAt(
      name: "GovernorSettings",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorSettings>;
    getContractAt(
      name: "GovernorVotes",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorVotes>;
    getContractAt(
      name: "GovernorVotesQuorumFraction",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.GovernorVotesQuorumFraction>;
    getContractAt(
      name: "Governor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Governor>;
    getContractAt(
      name: "IGovernor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IGovernor>;
    getContractAt(
      name: "IVotes",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IVotes>;
    getContractAt(
      name: "Votes",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Votes>;
    getContractAt(
      name: "IERC1271",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1271>;
    getContractAt(
      name: "IERC5267",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC5267>;
    getContractAt(
      name: "IERC5805",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC5805>;
    getContractAt(
      name: "IERC6372",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC6372>;
    getContractAt(
      name: "IERC1155Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC1155Receiver>;
    getContractAt(
      name: "IERC721Receiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC721Receiver>;
    getContractAt(
      name: "EIP712",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.EIP712>;
    getContractAt(
      name: "ERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ERC165>;
    getContractAt(
      name: "IERC165",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.IERC165>;
    getContractAt(
      name: "ShortStrings",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ShortStrings>;
    getContractAt(
      name: "DoubleEndedQueue",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.DoubleEndedQueue>;
    getContractAt(
      name: "LSP8Burnable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP8Burnable>;
    getContractAt(
      name: "LSP8BurnableInitAbstract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP8BurnableInitAbstract>;
    getContractAt(
      name: "LSP8CappedSupply",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP8CappedSupply>;
    getContractAt(
      name: "LSP8CappedSupplyInitAbstract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP8CappedSupplyInitAbstract>;
    getContractAt(
      name: "LSP8Enumerable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP8Enumerable>;
    getContractAt(
      name: "LSP8EnumerableInitAbstract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP8EnumerableInitAbstract>;
    getContractAt(
      name: "LSP8Votes",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP8Votes>;
    getContractAt(
      name: "LSP8VotesInitAbstract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP8VotesInitAbstract>;
    getContractAt(
      name: "ILSP8IdentifiableDigitalAsset",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ILSP8IdentifiableDigitalAsset>;
    getContractAt(
      name: "LSP7Burnable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP7Burnable>;
    getContractAt(
      name: "LSP7BurnableInitAbstract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP7BurnableInitAbstract>;
    getContractAt(
      name: "LSP7CappedSupply",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP7CappedSupply>;
    getContractAt(
      name: "LSP7CappedSupplyInitAbstract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP7CappedSupplyInitAbstract>;
    getContractAt(
      name: "LSP7Votes",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP7Votes>;
    getContractAt(
      name: "LSP7VotesInitAbstract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP7VotesInitAbstract>;
    getContractAt(
      name: "ILSP7DigitalAsset",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ILSP7DigitalAsset>;
    getContractAt(
      name: "LSP7DigitalAsset",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP7DigitalAsset>;
    getContractAt(
      name: "LSP7DigitalAssetInitAbstract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP7DigitalAssetInitAbstract>;
    getContractAt(
      name: "MyGovernor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MyGovernor>;
    getContractAt(
      name: "MyVotingToken",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MyVotingToken>;
    getContractAt(
      name: "MockUniversalReceiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MockUniversalReceiver>;
    getContractAt(
      name: "ILSP7Mintable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ILSP7Mintable>;
    getContractAt(
      name: "LSP7Mintable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP7Mintable>;
    getContractAt(
      name: "LSP7MintableInit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP7MintableInit>;
    getContractAt(
      name: "LSP7MintableInitAbstract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP7MintableInitAbstract>;
    getContractAt(
      name: "LSP8IdentifiableDigitalAsset",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP8IdentifiableDigitalAsset>;
    getContractAt(
      name: "LSP8IdentifiableDigitalAssetInitAbstract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP8IdentifiableDigitalAssetInitAbstract>;
    getContractAt(
      name: "MyGovernor",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MyGovernor>;
    getContractAt(
      name: "MyVotingNFT",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MyVotingNFT>;
    getContractAt(
      name: "MockUniversalReceiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.MockUniversalReceiver>;
    getContractAt(
      name: "ILSP1UniversalReceiver",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ILSP1UniversalReceiver>;
    getContractAt(
      name: "ILSP6KeyManager",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ILSP6KeyManager>;
    getContractAt(
      name: "ILSP7DigitalAsset",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ILSP7DigitalAsset>;
    getContractAt(
      name: "ILSP8Mintable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.ILSP8Mintable>;
    getContractAt(
      name: "LSP8Mintable",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP8Mintable>;
    getContractAt(
      name: "SubscriptionFactory",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.SubscriptionFactory>;
    getContractAt(
      name: "LSP8MintableInit",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP8MintableInit>;
    getContractAt(
      name: "LSP8MintableInitAbstract",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.LSP8MintableInitAbstract>;
    getContractAt(
      name: "Subscription",
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<Contracts.Subscription>;

    deployContract(
      name: "ERC725Y",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC725Y>;
    deployContract(
      name: "ERC725YInitAbstract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC725YInitAbstract>;
    deployContract(
      name: "IERC725Y",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC725Y>;
    deployContract(
      name: "IERC725Y",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC725Y>;
    deployContract(
      name: "ILSP1UniversalReceiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILSP1UniversalReceiver>;
    deployContract(
      name: "LSP17Extendable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP17Extendable>;
    deployContract(
      name: "LSP17ExtendableInitAbstract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP17ExtendableInitAbstract>;
    deployContract(
      name: "LSP4DigitalAssetMetadata",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP4DigitalAssetMetadata>;
    deployContract(
      name: "LSP4DigitalAssetMetadataInitAbstract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP4DigitalAssetMetadataInitAbstract>;
    deployContract(
      name: "OwnableUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OwnableUpgradeable>;
    deployContract(
      name: "IVotesUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVotesUpgradeable>;
    deployContract(
      name: "VotesUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VotesUpgradeable>;
    deployContract(
      name: "IERC5267Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5267Upgradeable>;
    deployContract(
      name: "IERC5805Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5805Upgradeable>;
    deployContract(
      name: "IERC6372Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC6372Upgradeable>;
    deployContract(
      name: "Initializable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "ContextUpgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContextUpgradeable>;
    deployContract(
      name: "EIP712Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712Upgradeable>;
    deployContract(
      name: "ERC165Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165Upgradeable>;
    deployContract(
      name: "IERC165Upgradeable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165Upgradeable>;
    deployContract(
      name: "Ownable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "GovernorCountingSimple",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorCountingSimple>;
    deployContract(
      name: "GovernorSettings",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorSettings>;
    deployContract(
      name: "GovernorVotes",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorVotes>;
    deployContract(
      name: "GovernorVotesQuorumFraction",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorVotesQuorumFraction>;
    deployContract(
      name: "Governor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Governor>;
    deployContract(
      name: "IGovernor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IGovernor>;
    deployContract(
      name: "IVotes",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVotes>;
    deployContract(
      name: "Votes",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Votes>;
    deployContract(
      name: "IERC1271",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1271>;
    deployContract(
      name: "IERC5267",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5267>;
    deployContract(
      name: "IERC5805",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5805>;
    deployContract(
      name: "IERC6372",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC6372>;
    deployContract(
      name: "IERC1155Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Receiver>;
    deployContract(
      name: "IERC721Receiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Receiver>;
    deployContract(
      name: "EIP712",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712>;
    deployContract(
      name: "ERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "ShortStrings",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ShortStrings>;
    deployContract(
      name: "DoubleEndedQueue",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DoubleEndedQueue>;
    deployContract(
      name: "LSP8Burnable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8Burnable>;
    deployContract(
      name: "LSP8BurnableInitAbstract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8BurnableInitAbstract>;
    deployContract(
      name: "LSP8CappedSupply",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8CappedSupply>;
    deployContract(
      name: "LSP8CappedSupplyInitAbstract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8CappedSupplyInitAbstract>;
    deployContract(
      name: "LSP8Enumerable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8Enumerable>;
    deployContract(
      name: "LSP8EnumerableInitAbstract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8EnumerableInitAbstract>;
    deployContract(
      name: "LSP8Votes",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8Votes>;
    deployContract(
      name: "LSP8VotesInitAbstract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8VotesInitAbstract>;
    deployContract(
      name: "ILSP8IdentifiableDigitalAsset",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILSP8IdentifiableDigitalAsset>;
    deployContract(
      name: "LSP7Burnable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP7Burnable>;
    deployContract(
      name: "LSP7BurnableInitAbstract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP7BurnableInitAbstract>;
    deployContract(
      name: "LSP7CappedSupply",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP7CappedSupply>;
    deployContract(
      name: "LSP7CappedSupplyInitAbstract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP7CappedSupplyInitAbstract>;
    deployContract(
      name: "LSP7Votes",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP7Votes>;
    deployContract(
      name: "LSP7VotesInitAbstract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP7VotesInitAbstract>;
    deployContract(
      name: "ILSP7DigitalAsset",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILSP7DigitalAsset>;
    deployContract(
      name: "LSP7DigitalAsset",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP7DigitalAsset>;
    deployContract(
      name: "LSP7DigitalAssetInitAbstract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP7DigitalAssetInitAbstract>;
    deployContract(
      name: "MyGovernor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MyGovernor>;
    deployContract(
      name: "MyVotingToken",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MyVotingToken>;
    deployContract(
      name: "MockUniversalReceiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockUniversalReceiver>;
    deployContract(
      name: "ILSP7Mintable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILSP7Mintable>;
    deployContract(
      name: "LSP7Mintable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP7Mintable>;
    deployContract(
      name: "LSP7MintableInit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP7MintableInit>;
    deployContract(
      name: "LSP7MintableInitAbstract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP7MintableInitAbstract>;
    deployContract(
      name: "LSP8IdentifiableDigitalAsset",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8IdentifiableDigitalAsset>;
    deployContract(
      name: "LSP8IdentifiableDigitalAssetInitAbstract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8IdentifiableDigitalAssetInitAbstract>;
    deployContract(
      name: "MyGovernor",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MyGovernor>;
    deployContract(
      name: "MyVotingNFT",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MyVotingNFT>;
    deployContract(
      name: "MockUniversalReceiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockUniversalReceiver>;
    deployContract(
      name: "ILSP1UniversalReceiver",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILSP1UniversalReceiver>;
    deployContract(
      name: "ILSP6KeyManager",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILSP6KeyManager>;
    deployContract(
      name: "ILSP7DigitalAsset",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILSP7DigitalAsset>;
    deployContract(
      name: "ILSP8Mintable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILSP8Mintable>;
    deployContract(
      name: "LSP8Mintable",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8Mintable>;
    deployContract(
      name: "SubscriptionFactory",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SubscriptionFactory>;
    deployContract(
      name: "LSP8MintableInit",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8MintableInit>;
    deployContract(
      name: "LSP8MintableInitAbstract",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8MintableInitAbstract>;
    deployContract(
      name: "Subscription",
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Subscription>;

    deployContract(
      name: "ERC725Y",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC725Y>;
    deployContract(
      name: "ERC725YInitAbstract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC725YInitAbstract>;
    deployContract(
      name: "IERC725Y",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC725Y>;
    deployContract(
      name: "IERC725Y",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC725Y>;
    deployContract(
      name: "ILSP1UniversalReceiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILSP1UniversalReceiver>;
    deployContract(
      name: "LSP17Extendable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP17Extendable>;
    deployContract(
      name: "LSP17ExtendableInitAbstract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP17ExtendableInitAbstract>;
    deployContract(
      name: "LSP4DigitalAssetMetadata",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP4DigitalAssetMetadata>;
    deployContract(
      name: "LSP4DigitalAssetMetadataInitAbstract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP4DigitalAssetMetadataInitAbstract>;
    deployContract(
      name: "OwnableUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.OwnableUpgradeable>;
    deployContract(
      name: "IVotesUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVotesUpgradeable>;
    deployContract(
      name: "VotesUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.VotesUpgradeable>;
    deployContract(
      name: "IERC5267Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5267Upgradeable>;
    deployContract(
      name: "IERC5805Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5805Upgradeable>;
    deployContract(
      name: "IERC6372Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC6372Upgradeable>;
    deployContract(
      name: "Initializable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Initializable>;
    deployContract(
      name: "ContextUpgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ContextUpgradeable>;
    deployContract(
      name: "EIP712Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712Upgradeable>;
    deployContract(
      name: "ERC165Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165Upgradeable>;
    deployContract(
      name: "IERC165Upgradeable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165Upgradeable>;
    deployContract(
      name: "Ownable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Ownable>;
    deployContract(
      name: "GovernorCountingSimple",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorCountingSimple>;
    deployContract(
      name: "GovernorSettings",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorSettings>;
    deployContract(
      name: "GovernorVotes",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorVotes>;
    deployContract(
      name: "GovernorVotesQuorumFraction",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.GovernorVotesQuorumFraction>;
    deployContract(
      name: "Governor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Governor>;
    deployContract(
      name: "IGovernor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IGovernor>;
    deployContract(
      name: "IVotes",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IVotes>;
    deployContract(
      name: "Votes",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Votes>;
    deployContract(
      name: "IERC1271",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1271>;
    deployContract(
      name: "IERC5267",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5267>;
    deployContract(
      name: "IERC5805",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC5805>;
    deployContract(
      name: "IERC6372",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC6372>;
    deployContract(
      name: "IERC1155Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC1155Receiver>;
    deployContract(
      name: "IERC721Receiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC721Receiver>;
    deployContract(
      name: "EIP712",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.EIP712>;
    deployContract(
      name: "ERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ERC165>;
    deployContract(
      name: "IERC165",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.IERC165>;
    deployContract(
      name: "ShortStrings",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ShortStrings>;
    deployContract(
      name: "DoubleEndedQueue",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.DoubleEndedQueue>;
    deployContract(
      name: "LSP8Burnable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8Burnable>;
    deployContract(
      name: "LSP8BurnableInitAbstract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8BurnableInitAbstract>;
    deployContract(
      name: "LSP8CappedSupply",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8CappedSupply>;
    deployContract(
      name: "LSP8CappedSupplyInitAbstract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8CappedSupplyInitAbstract>;
    deployContract(
      name: "LSP8Enumerable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8Enumerable>;
    deployContract(
      name: "LSP8EnumerableInitAbstract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8EnumerableInitAbstract>;
    deployContract(
      name: "LSP8Votes",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8Votes>;
    deployContract(
      name: "LSP8VotesInitAbstract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8VotesInitAbstract>;
    deployContract(
      name: "ILSP8IdentifiableDigitalAsset",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILSP8IdentifiableDigitalAsset>;
    deployContract(
      name: "LSP7Burnable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP7Burnable>;
    deployContract(
      name: "LSP7BurnableInitAbstract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP7BurnableInitAbstract>;
    deployContract(
      name: "LSP7CappedSupply",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP7CappedSupply>;
    deployContract(
      name: "LSP7CappedSupplyInitAbstract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP7CappedSupplyInitAbstract>;
    deployContract(
      name: "LSP7Votes",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP7Votes>;
    deployContract(
      name: "LSP7VotesInitAbstract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP7VotesInitAbstract>;
    deployContract(
      name: "ILSP7DigitalAsset",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILSP7DigitalAsset>;
    deployContract(
      name: "LSP7DigitalAsset",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP7DigitalAsset>;
    deployContract(
      name: "LSP7DigitalAssetInitAbstract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP7DigitalAssetInitAbstract>;
    deployContract(
      name: "MyGovernor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MyGovernor>;
    deployContract(
      name: "MyVotingToken",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MyVotingToken>;
    deployContract(
      name: "MockUniversalReceiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockUniversalReceiver>;
    deployContract(
      name: "ILSP7Mintable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILSP7Mintable>;
    deployContract(
      name: "LSP7Mintable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP7Mintable>;
    deployContract(
      name: "LSP7MintableInit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP7MintableInit>;
    deployContract(
      name: "LSP7MintableInitAbstract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP7MintableInitAbstract>;
    deployContract(
      name: "LSP8IdentifiableDigitalAsset",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8IdentifiableDigitalAsset>;
    deployContract(
      name: "LSP8IdentifiableDigitalAssetInitAbstract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8IdentifiableDigitalAssetInitAbstract>;
    deployContract(
      name: "MyGovernor",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MyGovernor>;
    deployContract(
      name: "MyVotingNFT",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MyVotingNFT>;
    deployContract(
      name: "MockUniversalReceiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.MockUniversalReceiver>;
    deployContract(
      name: "ILSP1UniversalReceiver",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILSP1UniversalReceiver>;
    deployContract(
      name: "ILSP6KeyManager",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILSP6KeyManager>;
    deployContract(
      name: "ILSP7DigitalAsset",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILSP7DigitalAsset>;
    deployContract(
      name: "ILSP8Mintable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.ILSP8Mintable>;
    deployContract(
      name: "LSP8Mintable",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8Mintable>;
    deployContract(
      name: "SubscriptionFactory",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.SubscriptionFactory>;
    deployContract(
      name: "LSP8MintableInit",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8MintableInit>;
    deployContract(
      name: "LSP8MintableInitAbstract",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.LSP8MintableInitAbstract>;
    deployContract(
      name: "Subscription",
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<Contracts.Subscription>;

    // default types
    getContractFactory(
      name: string,
      signerOrOptions?: ethers.Signer | FactoryOptions
    ): Promise<ethers.ContractFactory>;
    getContractFactory(
      abi: any[],
      bytecode: ethers.BytesLike,
      signer?: ethers.Signer
    ): Promise<ethers.ContractFactory>;
    getContractAt(
      nameOrAbi: string | any[],
      address: string | ethers.Addressable,
      signer?: ethers.Signer
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
    deployContract(
      name: string,
      args: any[],
      signerOrOptions?: ethers.Signer | DeployContractOptions
    ): Promise<ethers.Contract>;
  }
}
