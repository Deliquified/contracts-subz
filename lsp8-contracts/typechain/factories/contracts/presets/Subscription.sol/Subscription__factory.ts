/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  Subscription,
  SubscriptionInterface,
} from "../../../../contracts/presets/Subscription.sol/Subscription";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_owner",
        type: "address",
      },
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "address",
        name: "_recipient",
        type: "address",
      },
      {
        internalType: "address",
        name: "_protocolAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_stablecoin",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AllowanceNotZero",
    type: "error",
  },
  {
    inputs: [],
    name: "InsufficientAllowance",
    type: "error",
  },
  {
    inputs: [],
    name: "OnlyOwner",
    type: "error",
  },
  {
    inputs: [],
    name: "PaymentToCreatorFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "PaymentToProtocolFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "TierNotActive",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "fee",
        type: "uint256",
      },
    ],
    name: "PaymentSent",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "tierId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
    ],
    name: "Subscribed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tierId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "SubscriptionTierCreated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tierId",
        type: "uint256",
      },
    ],
    name: "SubscriptionTierDeactivated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "tierId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
    ],
    name: "SubscriptionTierUpdated",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "typeId",
        type: "bytes32",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "receivedData",
        type: "bytes",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "returnedValue",
        type: "bytes",
      },
    ],
    name: "UniversalReceiver",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "Unsubscribed",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address[]",
        name: "users",
        type: "address[]",
      },
    ],
    name: "chargeSubscribers",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "createTier",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tierId",
        type: "uint256",
      },
    ],
    name: "getTierDetails",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "user",
        type: "address",
      },
    ],
    name: "isSubscribed",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "protocolFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "recipient",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stablecoin",
    outputs: [
      {
        internalType: "contract ILSP7DigitalAsset",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_tierId",
        type: "uint256",
      },
    ],
    name: "subscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "subscribers",
    outputs: [
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "tierId",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "subscriptionName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "tiers",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "price",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "isActive",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenDecimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalTiers",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "typeId",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "universalReceiver",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "unsubscribe",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60806040523480156200001157600080fd5b5060405162001d3b38038062001d3b833981016040819052620000349162000151565b600080546001600160a01b0319166001600160a01b03871617905560016200005d858262000301565b50600280546001600160a01b038086166001600160a01b03199283161790925560048054858416908316178155600580549385169390921683179091556040805163313ce56760e01b8152905163313ce567928281019260209291908290030181865afa158015620000d3573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000f99190620003cd565b600460146101000a81548160ff021916908360ff1602179055505050505050620003f9565b80516001600160a01b03811681146200013657600080fd5b919050565b634e487b7160e01b600052604160045260246000fd5b600080600080600060a086880312156200016a57600080fd5b62000175866200011e565b602087810151919650906001600160401b03808211156200019557600080fd5b818901915089601f830112620001aa57600080fd5b815181811115620001bf57620001bf6200013b565b604051601f8201601f19908116603f01168101908382118183101715620001ea57620001ea6200013b565b816040528281528c868487010111156200020357600080fd5b600093505b8284101562000227578484018601518185018701529285019262000208565b600086848301015280995050505050505062000246604087016200011e565b925062000256606087016200011e565b915062000266608087016200011e565b90509295509295909350565b600181811c908216806200028757607f821691505b602082108103620002a857634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002fc57600081815260208120601f850160051c81016020861015620002d75750805b601f850160051c820191505b81811015620002f857828155600101620002e3565b5050505b505050565b81516001600160401b038111156200031d576200031d6200013b565b62000335816200032e845462000272565b84620002ae565b602080601f8311600181146200036d5760008415620003545750858301515b600019600386901b1c1916600185901b178555620002f8565b600085815260208120601f198616915b828110156200039e578886015182559484019460019091019084016200037d565b5085821015620003bd5787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600060208284031215620003e057600080fd5b815160ff81168114620003f257600080fd5b9392505050565b61193280620004096000396000f3fe60806040526004361061010e5760003560e01c806379eaaf61116100a5578063b92ae87c11610074578063f354858311610059578063f35485831461035f578063fcae448414610374578063fe90cab21461038957600080fd5b8063b92ae87c1461030f578063e9cbd8221461033f57600080fd5b806379eaaf61146102955780638da5cb5b146102b9578063944964cf146102d9578063b0e21e8a146102f957600080fd5b80633b97e856116100e15780633b97e856146101c55780635745ae28146101f857806366d003ac146102555780636bb56a141461027557600080fd5b8063039af9eb146101135780630676c1b71461014b5780630f574ba71461018357806318d4ef14146101a5575b600080fd5b34801561011f57600080fd5b5061013361012e36600461113c565b6103a9565b6040516101429392919061119b565b60405180910390f35b34801561015757600080fd5b5060045461016b906001600160a01b031681565b6040516001600160a01b039091168152602001610142565b34801561018f57600080fd5b506101a361019e36600461113c565b610457565b005b3480156101b157600080fd5b506101a36101c0366004611224565b610561565b3480156101d157600080fd5b506004546101e690600160a01b900460ff1681565b60405160ff9091168152602001610142565b34801561020457600080fd5b506102386102133660046112d6565b60086020526000908152604090208054600182015460029092015460ff909116919083565b604080519315158452602084019290925290820152606001610142565b34801561026157600080fd5b5060025461016b906001600160a01b031681565b6102886102833660046112fa565b6106a4565b6040516101429190611376565b3480156102a157600080fd5b506102ab60075481565b604051908152602001610142565b3480156102c557600080fd5b5060005461016b906001600160a01b031681565b3480156102e557600080fd5b506101336102f436600461113c565b6108c0565b34801561030557600080fd5b506102ab60035481565b34801561031b57600080fd5b5061032f61032a3660046112d6565b610983565b6040519015158152602001610142565b34801561034b57600080fd5b5060055461016b906001600160a01b031681565b34801561036b57600080fd5b506102886109cb565b34801561038057600080fd5b506101a3610a59565b34801561039557600080fd5b506101a36103a43660046113e1565b610ba5565b6006602052600090815260409020805481906103c49061143a565b80601f01602080910402602001604051908101604052809291908181526020018280546103f09061143a565b801561043d5780601f106104125761010080835404028352916020019161043d565b820191906000526020600020905b81548152906001019060200180831161042057829003601f168201915b50505050600183015460029093015491929160ff16905083565b60008181526006602052604090206002015460ff1661048957604051632015bd1360e11b815260040160405180910390fd5b6104933382610c9e565b6104c9576040517f13be252b00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60006104d84262278d0061148a565b6040805160608101825260018082526020808301858152838501888152336000818152600885528790209551865460ff1916901515178655915193850193909355915160029093019290925582518681529182018490529293507ff94991dcbea6e8ac439cbc93bd9c62a4d39f04e0ad656df9a703f13552c2787f910160405180910390a25050565b60005b81518110156106a05760008282815181106105815761058161149d565b60200260200101519050600060086000836001600160a01b03166001600160a01b0316815260200190815260200160002090504281600101541161061d576105e4826001600160a01b03166000908152600860205260409020805460ff19169055565b6040516001600160a01b038316907fae563681ccc696fae58fe830f401bc9c043a43ddb9f7c2830b32c3c70d9966e790600090a261068b565b600061062883610d43565b90508061068957610654836001600160a01b03166000908152600860205260409020805460ff19169055565b6040516001600160a01b038416907fae563681ccc696fae58fe830f401bc9c043a43ddb9f7c2830b32c3c70d9966e790600090a25b505b50508080610698906114b3565b915050610564565b5050565b60607fc79f8d33a5a719ed9c4bcb38dd8da0defce32f9183aad3055f924a2175cdf24484016108a9576000806106dc848601866114cc565b915091506000818060200190518101906106f69190611530565b6005549091506001600160a01b031633146107585760405162461bcd60e51b815260206004820152600d60248201527f496e76616c696420746f6b656e0000000000000000000000000000000000000060448201526064015b60405180910390fd5b60008181526006602052604090206002015460ff1661078a57604051632015bd1360e11b815260040160405180910390fd5b6107948382610c9e565b156108a55760006107a84262278d0061148a565b60408051606081018252600180825260208083018581528385018881526001600160a01b038b166000818152600885528790209551865460ff1916901515178655915193850193909355915160029093019290925582518681529182018490529293507ff94991dcbea6e8ac439cbc93bd9c62a4d39f04e0ad656df9a703f13552c2787f910160405180910390a2600061084185610d43565b9050806108a25761086d856001600160a01b03166000908152600860205260409020805460ff19169055565b6040516001600160a01b038616907fae563681ccc696fae58fe830f401bc9c043a43ddb9f7c2830b32c3c70d9966e790600090a25b50505b5050505b506040805160208101909152600081529392505050565b60008181526006602052604081206001810154600282015482546060949384939092839260ff9091169083906108f59061143a565b80601f01602080910402602001604051908101604052809291908181526020018280546109219061143a565b801561096e5780601f106109435761010080835404028352916020019161096e565b820191906000526020600020905b81548152906001019060200180831161095157829003601f168201915b50505050509250935093509350509193909250565b6001600160a01b03811660009081526008602052604081205460ff1680156109c557506001600160a01b03821660009081526008602052604090206001015442105b92915050565b600180546109d89061143a565b80601f0160208091040260200160405190810160405280929190818152602001828054610a049061143a565b8015610a515780601f10610a2657610100808354040283529160200191610a51565b820191906000526020600020905b815481529060010190602001808311610a3457829003601f168201915b505050505081565b3360009081526008602052604090205460ff16610ab85760405162461bcd60e51b815260206004820152600e60248201527f4e6f742073756273637269626564000000000000000000000000000000000000604482015260640161074f565b6005546040516365aeaa9560e01b81523060048201523360248201526000916001600160a01b0316906365aeaa9590604401602060405180830381865afa158015610b07573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610b2b9190611530565b90508015610b65576040517fe953bbb800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b33600081815260086020526040808220805460ff19169055517fae563681ccc696fae58fe830f401bc9c043a43ddb9f7c2830b32c3c70d9966e79190a250565b6000546001600160a01b03163314610be9576040517f5fc483c500000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6007805460009182610bfa836114b3565b909155506040805160608101825285815260208082018690526001828401526000848152600690915291909120815192935090918190610c3a9082611598565b50602082015160018201556040918201516002909101805460ff19169115159190911790555181907f0cd7898308a5fad9421ce03e32f30d9f2a6814fbae5caee3f6de4d482a5aed9990610c919086908690611658565b60405180910390a2505050565b6005546040516365aeaa9560e01b81523060048201526001600160a01b03848116602483015260009283929116906365aeaa9590604401602060405180830381865afa158015610cf2573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610d169190611530565b60008481526006602052604081206001015491925090610d3790600c61167a565b90911015949350505050565b6001600160a01b038116600090815260086020908152604080832060028101548452600690925282206004548390610d8690600160a01b900460ff16600a611775565b90506000818360010154610d9a919061167a565b905060006064610dab83600261167a565b610db59190611784565b90506000610dc382846117a6565b60408051600280825260608201835292935060009290916020830190803683370190505090508881600081518110610dfd57610dfd61149d565b60200260200101906001600160a01b031690816001600160a01b0316815250508881600181518110610e3157610e3161149d565b6001600160a01b03929092166020928302919091018201526040805160028082526060820183526000939192909183019080368337505060025482519293506001600160a01b031691839150600090610e8c57610e8c61149d565b6001600160a01b039283166020918202929092010152600454825191169082906001908110610ebd57610ebd61149d565b6001600160a01b039290921660209283029190910182015260408051600280825260608201835260009391929091830190803683370190505090508381600081518110610f0c57610f0c61149d565b6020026020010181815250508481600181518110610f2c57610f2c61149d565b602090810291909101015260408051600280825260608201909252600091816020016020820280368337019050509050600181600081518110610f7157610f7161149d565b602002602001019015159081151581525050600181600181518110610f9857610f9861149d565b9115156020928302919091019091015260408051600280825260608201909252600091816020015b6060815260200190600190039081610fc05790505090506040518060200160405280600081525081600081518110610ffa57610ffa61149d565b602002602001018190525060405180602001604052806000815250816001815181106110285761102861149d565b60209081029190910101526005546040517f2d7667c90000000000000000000000000000000000000000000000000000000081526001600160a01b0390911690632d7667c9906110849088908890889088908890600401611852565b600060405180830381600087803b15801561109e57600080fd5b505af19250505080156110af575060015b6110e5576040517f15fed33d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b60408051878152602081018990526001600160a01b038f16917f07d56d06d59e708b4db4f68fd102036f1f8441c3f1ce450e350c21fed38d0287910160405180910390a25060019c9b505050505050505050505050565b60006020828403121561114e57600080fd5b5035919050565b6000815180845260005b8181101561117b5760208185018101518683018201520161115f565b506000602082860101526020601f19601f83011685010191505092915050565b6060815260006111ae6060830186611155565b602083019490945250901515604090910152919050565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715611204576112046111c5565b604052919050565b6001600160a01b038116811461122157600080fd5b50565b6000602080838503121561123757600080fd5b823567ffffffffffffffff8082111561124f57600080fd5b818501915085601f83011261126357600080fd5b813581811115611275576112756111c5565b8060051b91506112868483016111db565b81815291830184019184810190888411156112a057600080fd5b938501935b838510156112ca57843592506112ba8361120c565b82825293850193908501906112a5565b98975050505050505050565b6000602082840312156112e857600080fd5b81356112f38161120c565b9392505050565b60008060006040848603121561130f57600080fd5b83359250602084013567ffffffffffffffff8082111561132e57600080fd5b818601915086601f83011261134257600080fd5b81358181111561135157600080fd5b87602082850101111561136357600080fd5b6020830194508093505050509250925092565b6020815260006112f36020830184611155565b600067ffffffffffffffff8311156113a3576113a36111c5565b6113b6601f8401601f19166020016111db565b90508281528383830111156113ca57600080fd5b828260208301376000602084830101529392505050565b600080604083850312156113f457600080fd5b823567ffffffffffffffff81111561140b57600080fd5b8301601f8101851361141c57600080fd5b61142b85823560208401611389565b95602094909401359450505050565b600181811c9082168061144e57607f821691505b60208210810361146e57634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fd5b808201808211156109c5576109c5611474565b634e487b7160e01b600052603260045260246000fd5b6000600182016114c5576114c5611474565b5060010190565b600080604083850312156114df57600080fd5b82356114ea8161120c565b9150602083013567ffffffffffffffff81111561150657600080fd5b8301601f8101851361151757600080fd5b61152685823560208401611389565b9150509250929050565b60006020828403121561154257600080fd5b5051919050565b601f82111561159357600081815260208120601f850160051c810160208610156115705750805b601f850160051c820191505b8181101561158f5782815560010161157c565b5050505b505050565b815167ffffffffffffffff8111156115b2576115b26111c5565b6115c6816115c0845461143a565b84611549565b602080601f8311600181146115fb57600084156115e35750858301515b600019600386901b1c1916600185901b17855561158f565b600085815260208120601f198616915b8281101561162a5788860151825594840194600190910190840161160b565b50858210156116485787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b60408152600061166b6040830185611155565b90508260208301529392505050565b80820281158282048414176109c5576109c5611474565b600181815b808511156116cc5781600019048211156116b2576116b2611474565b808516156116bf57918102915b93841c9390800290611696565b509250929050565b6000826116e3575060016109c5565b816116f0575060006109c5565b816001811461170657600281146117105761172c565b60019150506109c5565b60ff84111561172157611721611474565b50506001821b6109c5565b5060208310610133831016604e8410600b841016171561174f575081810a6109c5565b6117598383611691565b806000190482111561176d5761176d611474565b029392505050565b60006112f360ff8416836116d4565b6000826117a157634e487b7160e01b600052601260045260246000fd5b500490565b818103818111156109c5576109c5611474565b600081518084526020808501945080840160005b838110156117f25781516001600160a01b0316875295820195908201906001016117cd565b509495945050505050565b600081518084526020808501808196508360051b8101915082860160005b85811015611845578284038952611833848351611155565b9885019893509084019060010161181b565b5091979650505050505050565b60a08152600061186560a08301886117b9565b60208382038185015261187882896117b9565b8481036040860152875180825282890193509082019060005b818110156118ad57845183529383019391830191600101611891565b50508481036060860152865180825290820192508187019060005b818110156118e65782511515855293830193918301916001016118c8565b5050505082810360808401526112ca81856117fd56fea2646970667358221220c9aff9646e1218480ce6231a74fdd9a20390c6ee6b96dac28d2a7a6cec98289064736f6c63430008110033";

type SubscriptionConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SubscriptionConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Subscription__factory extends ContractFactory {
  constructor(...args: SubscriptionConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    _owner: AddressLike,
    _name: string,
    _recipient: AddressLike,
    _protocolAddress: AddressLike,
    _stablecoin: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      _owner,
      _name,
      _recipient,
      _protocolAddress,
      _stablecoin,
      overrides || {}
    );
  }
  override deploy(
    _owner: AddressLike,
    _name: string,
    _recipient: AddressLike,
    _protocolAddress: AddressLike,
    _stablecoin: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(
      _owner,
      _name,
      _recipient,
      _protocolAddress,
      _stablecoin,
      overrides || {}
    ) as Promise<
      Subscription & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Subscription__factory {
    return super.connect(runner) as Subscription__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SubscriptionInterface {
    return new Interface(_abi) as SubscriptionInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): Subscription {
    return new Contract(address, _abi, runner) as unknown as Subscription;
  }
}
